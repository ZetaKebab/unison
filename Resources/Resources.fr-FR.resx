<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Exit" xml:space="preserve">
    <value>Quitter</value>
  </data>
  <data name="Radios" xml:space="preserve">
    <value>Radios</value>
  </data>
  <data name="Radio_Country" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="Radio_Loading" xml:space="preserve">
    <value>Recherche de stations...</value>
  </data>
  <data name="Radio_Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Radio_NotFound" xml:space="preserve">
    <value>Aucune station trouvée !</value>
  </data>
  <data name="Radio_Reset" xml:space="preserve">
    <value>Réinitialiser</value>
  </data>
  <data name="Radio_Search" xml:space="preserve">
    <value>Chercher</value>
  </data>
  <data name="Radio_SearchStation" xml:space="preserve">
    <value>Recherche de station</value>
  </data>
  <data name="Radio_Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Settings_About" xml:space="preserve">
    <value>À propos</value>
  </data>
  <data name="Settings_AboutInfo" xml:space="preserve">
    <value>unison est un logiciel libre. Il est développé avec les technologies suivantes :</value>
  </data>
  <data name="Settings_ConnectButton" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="Settings_Connection" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="Settings_ConnectionPasswordInfo" xml:space="preserve">
    <value>Veuillez noter que comme les mots de passe de MPD ne sont pas sécurisés (ils sont envoyés en clair au serveur), ils sont sauvegardés tels quels.</value>
  </data>
  <data name="Settings_ConnectionStatus" xml:space="preserve">
    <value>Statut :</value>
  </data>
  <data name="Settings_ConnectionStatusConnected" xml:space="preserve">
    <value>connecté à MPD</value>
  </data>
  <data name="Settings_ConnectionStatusConnecting" xml:space="preserve">
    <value>connexion en cours...</value>
  </data>
  <data name="Settings_ConnectionStatusOffline" xml:space="preserve">
    <value>non connecté.</value>
  </data>
  <data name="Settings_Host" xml:space="preserve">
    <value>Hôte</value>
  </data>
  <data name="Settings_License" xml:space="preserve">
    <value>Licence</value>
  </data>
  <data name="Settings_MadeBy" xml:space="preserve">
    <value>Créé par</value>
  </data>
  <data name="Settings_NextTrack" xml:space="preserve">
    <value>Piste suivante</value>
  </data>
  <data name="Settings_Password" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="Settings_PlayPause" xml:space="preserve">
    <value>Jouer / pause</value>
  </data>
  <data name="Settings_Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Settings_PreviousTrack" xml:space="preserve">
    <value>Piste précédente</value>
  </data>
  <data name="Settings_Shortcuts" xml:space="preserve">
    <value>Raccourcis</value>
  </data>
  <data name="Settings_ShortcutsInfo" xml:space="preserve">
    <value>Veuillez noter que si votre touche n'est pas reconnue, cela est du à la manière dont les touches virtuelles sont gérées par Windows.</value>
  </data>
  <data name="Settings_ShortcutsKey" xml:space="preserve">
    <value>Appuyez sur une touche...</value>
  </data>
  <data name="Settings_ShowWindow" xml:space="preserve">
    <value>Afficher la fenêtre</value>
  </data>
  <data name="Settings_SnapcastInfo1" xml:space="preserve">
    <value>Il est possible de mettre votre version localement installé de Snapcast avec un </value>
  </data>
  <data name="Settings_SnapcastInfo2" xml:space="preserve">
    <value>chemin absolu</value>
  </data>
  <data name="Settings_SnapcastInfo3" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Settings_SnapcastLauch" xml:space="preserve">
    <value>Lancer au démarrage</value>
  </data>
  <data name="Settings_SnapcastPath" xml:space="preserve">
    <value>Chemin de l'exécutable</value>
  </data>
  <data name="Settings_SnapcastPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Settings_SnapcastResetButton" xml:space="preserve">
    <value>Réinitialiser</value>
  </data>
  <data name="Settings_SnapcastWindow" xml:space="preserve">
    <value>Afficher la fenêtre de Snapcast</value>
  </data>
  <data name="Settings_SourceCode1" xml:space="preserve">
    <value>Code source librement disponible</value>
  </data>
  <data name="Settings_SourceCode2" xml:space="preserve">
    <value>ici</value>
  </data>
  <data name="Settings_Version" xml:space="preserve">
    <value>Version :</value>
  </data>
  <data name="Settings_VolumeDown" xml:space="preserve">
    <value>Baisse de volume</value>
  </data>
  <data name="Settings_VolumeMute" xml:space="preserve">
    <value>Volume en sourdine</value>
  </data>
  <data name="Settings_VolumeOffset" xml:space="preserve">
    <value>Écart de volume</value>
  </data>
  <data name="Settings_VolumeUp" xml:space="preserve">
    <value>Augmentation de volume</value>
  </data>
  <data name="ShowWindow" xml:space="preserve">
    <value>Montrer la fenêtre</value>
  </data>
  <data name="Snapcast_Popup1" xml:space="preserve">
    <value>Erreur Snapcast</value>
  </data>
  <data name="Snapcast_Popup2" xml:space="preserve">
    <value>Chemin invalide :</value>
  </data>
  <data name="Snapcast_Popup3" xml:space="preserve">
    <value>Chemin actuel :</value>
  </data>
  <data name="Snapcast_Popup4" xml:space="preserve">
    <value>Vous pouvez le réinitialiser dans la configuration.</value>
  </data>
  <data name="StartSnapcast" xml:space="preserve">
    <value>Démarrer Snapcast</value>
  </data>
  <data name="Stats" xml:space="preserve">
    <value>Stats</value>
  </data>
  <data name="Stats_Albums" xml:space="preserve">
    <value>Albums :</value>
  </data>
  <data name="Stats_Artists" xml:space="preserve">
    <value>Artistes :</value>
  </data>
  <data name="Stats_LastDatabaseUpdate" xml:space="preserve">
    <value>Mise à jour de la base de données :</value>
  </data>
  <data name="Stats_Songs" xml:space="preserve">
    <value>Morceaux :</value>
  </data>
  <data name="Stats_TotalPlaytime" xml:space="preserve">
    <value>Temps total :</value>
  </data>
  <data name="Stats_TotalTimePlayed" xml:space="preserve">
    <value>Temps d'écoute écoulé :</value>
  </data>
  <data name="Stats_Uptime" xml:space="preserve">
    <value>MPD lancé depuis : </value>
  </data>
  <data name="StopSnapcast" xml:space="preserve">
    <value>Stopper Snapcast</value>
  </data>
</root>